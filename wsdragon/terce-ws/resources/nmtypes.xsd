<?xml version="1.0" encoding="UTF-8"?>
<!-- @version SVN: $Id: nmtypes.xsd,v 1.1 2007-09-03 17:05:42 jarda Exp $ -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" xmlns:nmtl3="http://ogf.org/schema/network/topology/l3/20070707/" xmlns:nmtb="http://ogf.org/schema/network/topology/base/20070707/" xmlns:CtrlPlane="http://ogf.org/schema/network/topology/ctrlPlane/20070707/">
  <xs:import namespace="http://ogf.org/schema/network/topology/base/20070707/" schemaLocation="nmtb.xsd"/>
  <xs:import namespace="http://ogf.org/schema/network/topology/ctrlPlane/20070707/" schemaLocation="xsd1.xsd"/>
  <xs:import namespace="http://ogf.org/schema/network/topology/l3/20070707/" schemaLocation="nmtopo_l3.xsd"/>
  <xs:attributeGroup name="Identifier">
    <xs:attribute name="id" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="IdReference">
    <xs:attribute name="idRef" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="Type">
    <xs:attribute name="type" use="required" type="xs:string"/>
  </xs:attributeGroup>
  <!--
    ##############################################################
    This sequence allows any element, attribute, or text (regardless 
    of name or namespace) into the document when invoked.
    ##############################################################
  -->
  <xs:group name="anyElement">
    <xs:sequence>
      <xs:any processContents="skip"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="anyAttribute">
    <xs:anyAttribute processContents="skip"/>
  </xs:attributeGroup>
  <xs:group name="anyThing">
    <xs:sequence>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="anyElement"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="anyThing">
    <xs:attributeGroup ref="anyAttribute"/>
  </xs:attributeGroup>
  <!-- Node Type -->
  <xs:attributeGroup name="NodeContent">
    <xs:attribute name="id" type="xs:string"/>
  </xs:attributeGroup>
  <!-- Base Topology IdReference types -->
  <xs:element name="topologyIdRef" type="xs:string"/>
  <xs:element name="nodeIdRef" substitutionGroup="CtrlPlane:CtrlPlaneHopContent"/>
  <xs:element name="portIdRef" substitutionGroup="CtrlPlane:CtrlPlaneHopContent"/>
  <xs:element name="interfaceIdRef" type="xs:string"/>
  <xs:element name="linkIdRef" substitutionGroup="CtrlPlane:CtrlPlaneHopContent"/>
  <xs:element name="pathIdRef" type="xs:string"/>
  <xs:element name="networkIdRef" type="xs:string"/>
  <xs:element name="domainIdRef" substitutionGroup="CtrlPlane:CtrlPlaneHopContent"/>
</xs:schema>
